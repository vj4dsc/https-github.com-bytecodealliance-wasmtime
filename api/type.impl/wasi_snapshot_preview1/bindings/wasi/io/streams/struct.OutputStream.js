(function() {var type_impls = {
"wasi_snapshot_preview1":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-Debug-for-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.blocking_flush\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.blocking_flush\" class=\"fn\">blocking_flush</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Request to flush buffered output, and block until flush completes\nand stream is ready for writing again.</p>\n</div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.blocking_splice\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.blocking_splice\" class=\"fn\">blocking_splice</a>(\n    &amp;self,\n    src: &amp;<a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.InputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::InputStream\">InputStream</a>,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read from one stream and write to another, with blocking.</p>\n<p>This is similar to <code>splice</code>, except that it blocks until the\n<code>output-stream</code> is ready for writing, and the <code>input-stream</code>\nis ready for reading, before performing the <code>splice</code>.</p>\n</div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.blocking_write_and_flush\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.blocking_write_and_flush\" class=\"fn\">blocking_write_and_flush</a>(\n    &amp;self,\n    contents: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Perform a write of up to 4096 bytes, and then flush the stream. Block\nuntil all of these operations are complete, or an error occurs.</p>\n<p>This is a convenience wrapper around the use of <code>check-write</code>,\n<code>subscribe</code>, <code>write</code>, and <code>flush</code>, and is implemented with the\nfollowing pseudo-code:</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>let pollable = this.subscribe();\nwhile !contents.is_empty() {\n// Wait for the stream to become writable\npollable.block();\nlet Ok(n) = this.check-write(); // eliding error handling\nlet len = min(n, contents.len());\nlet (chunk, rest) = contents.split_at(len);\nthis.write(chunk  );            // eliding error handling\ncontents = rest;\n}\nthis.flush();\n// Wait for completion of `flush`\npollable.block();\n// Check for any errors that arose during `flush`\nlet _ = this.check-write();         // eliding error handling\n</code></pre></div></div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.blocking_write_zeroes_and_flush\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.blocking_write_zeroes_and_flush\" class=\"fn\">blocking_write_zeroes_and_flush</a>(\n    &amp;self,\n    len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Perform a write of up to 4096 zeroes, and then flush the stream.\nBlock until all of these operations are complete, or an error\noccurs.</p>\n<p>This is a convenience wrapper around the use of <code>check-write</code>,\n<code>subscribe</code>, <code>write-zeroes</code>, and <code>flush</code>, and is implemented with\nthe following pseudo-code:</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>let pollable = this.subscribe();\nwhile num_zeroes != 0 {\n// Wait for the stream to become writable\npollable.block();\nlet Ok(n) = this.check-write(); // eliding error handling\nlet len = min(n, num_zeroes);\nthis.write-zeroes(len);         // eliding error handling\nnum_zeroes -= len;\n}\nthis.flush();\n// Wait for completion of `flush`\npollable.block();\n// Check for any errors that arose during `flush`\nlet _ = this.check-write();         // eliding error handling\n</code></pre></div></div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_write\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.check_write\" class=\"fn\">check_write</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Check readiness for writing. This function never blocks.</p>\n<p>Returns the number of bytes permitted for the next call to <code>write</code>,\nor an error. Calling <code>write</code> with more bytes than this function has\npermitted will trap.</p>\n<p>When this function returns 0 bytes, the <code>subscribe</code> pollable will\nbecome ready when this function will report at least 1 byte, or an\nerror.</p>\n</div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Request to flush buffered output. This function never blocks.</p>\n<p>This tells the output-stream that the caller intends any buffered\noutput to be flushed. the output which is expected to be flushed\nis all that has been passed to <code>write</code> prior to this call.</p>\n<p>Upon calling this function, the <code>output-stream</code> will not accept any\nwrites (<code>check-write</code> will return <code>ok(0)</code>) until the flush has\ncompleted. The <code>subscribe</code> pollable will become ready when the\nflush has completed and the stream can accept more writes.</p>\n</div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.splice\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.splice\" class=\"fn\">splice</a>(&amp;self, src: &amp;<a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.InputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::InputStream\">InputStream</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Read from one stream and write to another.</p>\n<p>The behavior of splice is equivelant to:</p>\n<ol>\n<li>calling <code>check-write</code> on the <code>output-stream</code></li>\n<li>calling <code>read</code> on the <code>input-stream</code> with the smaller of the\n<code>check-write</code> permitted length and the <code>len</code> provided to <code>splice</code></li>\n<li>calling <code>write</code> on the <code>output-stream</code> with that read data.</li>\n</ol>\n<p>Any error reported by the call to <code>check-write</code>, <code>read</code>, or\n<code>write</code> ends the splice and reports that error.</p>\n<p>This function returns the number of bytes transferred; it may be less\nthan <code>len</code>.</p>\n</div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.subscribe\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.subscribe\" class=\"fn\">subscribe</a>(&amp;self) -&gt; <a class=\"type\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/type.Pollable.html\" title=\"type wasi_snapshot_preview1::bindings::wasi::io::streams::Pollable\">Pollable</a></h4></section></summary><div class=\"docblock\"><p>Create a <code>pollable</code> which will resolve once the output-stream\nis ready for more writing, or an error has occured. When this\npollable is ready, <code>check-write</code> will return <code>ok(n)</code> with n&gt;0, or an\nerror.</p>\n<p>If the stream is closed, this pollable is always ready immediately.</p>\n<p>The created <code>pollable</code> is a child resource of the <code>output-stream</code>.\nImplementations may trap if the <code>output-stream</code> is dropped before\nall derived <code>pollable</code>s created with this function are dropped.</p>\n</div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.write\" class=\"fn\">write</a>(&amp;self, contents: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Perform a write. This function never blocks.</p>\n<p>When the destination of a <code>write</code> is binary data, the bytes from\n<code>contents</code> are written verbatim. When the destination of a <code>write</code> is\nknown to the implementation to be text, the bytes of <code>contents</code> are\ntranscoded from UTF-8 into the encoding of the destination and then\nwritten.</p>\n<p>Precondition: check-write gave permit of Ok(n) and contents has a\nlength of less than or equal to n. Otherwise, this function will trap.</p>\n<p>returns Err(closed) without writing if the stream has closed since\nthe last call to check-write provided a permit.</p>\n</div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputStream\" class=\"impl\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><a href=\"#impl-OutputStream\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html\" title=\"struct wasi_snapshot_preview1::bindings::wasi::io::streams::OutputStream\">OutputStream</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_zeroes\" class=\"method\"><a class=\"src rightside\" href=\"src/wasi_snapshot_preview1/lib.rs.html#66-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/struct.OutputStream.html#tymethod.write_zeroes\" class=\"fn\">write_zeroes</a>(&amp;self, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"wasi_snapshot_preview1/bindings/wasi/io/streams/enum.StreamError.html\" title=\"enum wasi_snapshot_preview1::bindings::wasi::io::streams::StreamError\">StreamError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Write zeroes to a stream.</p>\n<p>This should be used precisely like <code>write</code> with the exact same\npreconditions (must use check-write first), but instead of\npassing a list of bytes, you simply pass the number of zero-bytes\nthat should be written.</p>\n</div></details></div></details>",0,"wasi_snapshot_preview1::bindings::wasi::cli::stdout::OutputStream","wasi_snapshot_preview1::bindings::wasi::cli::stderr::OutputStream","wasi_snapshot_preview1::bindings::wasi::filesystem::types::OutputStream","wasi_snapshot_preview1::bindings::wasi::sockets::tcp::OutputStream"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()